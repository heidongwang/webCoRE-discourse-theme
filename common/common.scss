
@import "theme_variables";
/*
 * webCoRE Discourse theme
 *
 * Copyright 2017 by its authors; see AUTHORS.md or
 * https://webcore-mechanics.github.io/webCoRE-discourse-theme/AUTHORS
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/**/
/* The common stylesheet is loaded on every page for both desktop and mobile*/
/* devices.*/
/**/
/* Discourse color scheme*/
/* Calculate perceived lightness of a color*/
@function luma($color) {
	@return 0.299 * red($color) + 0.587 * green($color) + 0.114 * blue($color);
}
/* Choose between two colors based on the luma of a*/
/* third (usually a background color)*/
@function contrast-switch(
	$color,
	$if-dark: #fff,
	$if-light: #000,
	$threshold: 130
) {
	@return if(luma($color) < $threshold, $if-dark, $if-light);
}
/* Reasonably semantic names for the current Discourse*/
/* color scheme colors*/
$discourse-text-color: $primary;
$discourse-bg-color: $secondary;
$discourse-link-color: $tertiary;
$discourse-navigation-color: $quaternary;
$discourse-highlight-color: $highlight;
$discourse-is-dark: luma($discourse-bg-color) < 130;
/* SmartThings brand/site colors*/
$smartthings-primary: #15bfff;
$smartthings-teal: #09a;
$smartthings-violet: #3e0d86;
/* Google webfont with a few weights loaded in <head>*/
$header-font-family: 'Saira Semi Condensed', sans-serif;
/* SMS-style conversation*/
$conversation: (
	them: (
		background-color: mix(#eee, $smartthings-primary, 98%),
		color: #333,
	),
	us: (
		background-color: saturate(darken($smartthings-primary, 8%), 25%),
		color: white,

		link: (
			color: mix(white, $smartthings-primary, 90%),

			hover: (
				color: mix(white, $smartthings-primary, 90%),
			),
		),
	),
);
/* Large square links*/
$color: contrast-switch($discourse-bg-color, $discourse-navigation-color, $smartthings-violet);
$tile: (
	border-color: rgba(white, 0.05),
	border-bottom-color: $color,
	background-color: mix(contrast-switch($discourse-bg-color, lighten($discourse-bg-color, 3%), white), $color, 99%),
	color: $discourse-text-color,

	icon: (
		fill: $color,
	),

	hover: (
		background-color: $smartthings-violet,
		border-color: $smartthings-violet,
		color: white,

		icon: (
			fill: white,
		),
	),
);
/* Full-width bars*/
$ribbon: (
	dark: (
		background-color: mix(#222, $smartthings-primary, 95%),
		color: white,
	),
	tiles: (
		background-color: mix(contrast-switch($discourse-bg-color, $discourse-bg-color, #f5f5f5), map-get($tile, border-color), 97%),
		color: contrast-switch($discourse-bg-color, $discourse-text-color, $smartthings-violet),
	),
	quick-links: (
		background-color: $smartthings-violet,
		color: white,
	),
);
/* Quick navigation buttons*/
$color: $smartthings-primary;
$quick-link: (
	border-color: rgba(white, 0.05),
	border-bottom-color: $color,
	background-color: lighten(map-get(map-get($ribbon, dark), background-color), 15%),
	color: white,

	hover: (
		border-color: $color,
		background-color: $color,
		color: black,
	),
);
/* Forum styling*/
$whisper: (
	background-color: mix($discourse-bg-color, $discourse-highlight-color, 90%),
);
$color: mix($discourse-bg-color, $discourse-highlight-color, 45%);
$whisper-button: (
	background-color: $color,
	color: contrast-switch($color, white, black),
);
/* Autolinked keywords in topics and replies*/
$color: $discourse-text-color;
$keyword-link: (
	border-bottom-style: dotted,
	border-bottom-color: rgba($color, 0.5),
	color: $color,

	hover: (
		border-bottom-color: $color,
		color: $color,
	),
);
$breakpoints: (
	conversations-above-greeting: 960px,
	quick-links-two-lines: 600px,
	badges-below-username: 570px,
);
/* Discourse theme upload variables do not work with child themes*/
$logotype-image: contrast-switch(
	$discourse-bg-color,
	$if-dark: 'https://community.webcore.co/uploads/default/original/2X/2/2382a051335d7fb65d7843e0f8d3edac0d427d96.svg',
	$if-light: 'https://community.webcore.co/uploads/default/original/2X/d/d82aa5d0f719318d1f35bafdec06e2c8cf3c54be.svg'
);
$logomark-image: contrast-switch(
	$discourse-bg-color,
	$if-dark: 'https://community.webcore.co/uploads/default/original/2X/7/7b957d3bc7df5200d1e7a7b1f247155fa3d8fd65.svg',
	$if-light: 'https://community.webcore.co/uploads/default/original/2X/9/9ab0be1e34db8380a430a655173c215d31698caa.svg'
);
@mixin badge($group, $badges: $badges) {
	$badge: map-get($badges, $group);
	$content: map-get($badge, content);

	/* .username has a max-width applied that should be removed for long badge text*/
	@if str-length($content) > 20 {
		max-width: none;
	}

	&::after {
		@include apply($badge);

		display: inline-block;

		/* Reduced font size for long badges*/
		@if str-length($content) > 20 {
			font-size: 13px;
		}

		/* Badges on their own line for small screens*/
		@media screen and (max-width: map-get($breakpoints, badges-below-username)) {
			display: table-cell;
			margin-left: 0;
		}
	}
}
/* Username line badge styling; keys do not need to match a user group name and*/
/* must be explicitly mapped to one or more groups below*/
$badges: (
	verification-warning: (
		background-color: #f00,
		content: "WARNING - No Response to Verification Requests!!!",
	),
	awaiting-verification: (
		background-color: #f90,
		content: "ST Username Awaiting Verification",
	),
	minion: (
		background-color: rgba(contrast-switch($discourse-bg-color, white, #fed55d), 0.2),
		background-image: url(contrast-switch($discourse-bg-color, 'https://community.webcore.co/uploads/default/original/2X/1/175d366e3b193d3118e6be0d3a6f2f1fa1119486.png', 'https://community.webcore.co/uploads/default/original/2X/a/a421889247679462c500b76a0047bda38866be47.png')),
		background-position: center,
		background-repeat: no-repeat,
		background-size: contain,
		content: " ",
		width: 104px,
		height: 24px,
		vertical-align: middle,
	),
	new-user: (
		background-color: #f00,
		content: "User Verification Not Started",
	),
	st-staff: (
		background-color: #00a0dc,
		content: "SmartThings Staff",
	),
);
.topic-post {
	/* Defaults for post-username badge*/
	.username::after {
		display: none;
		color: white;
		border-radius: 4px;
		margin-left: 5px;
		padding-left: 5px;
		padding-right: 5px;
		font-family: Helvetica, sans-serif;
		font-weight: 100;
		font-size: 14px;
		position: relative;
		top: 4%;
	}

	/* Group badges*/
	.username {
		&.Pending_ST_Confirm,
		&.Verification_PM,
		&.Verification_PM2 {
			@include badge(awaiting-verification);
		}

		&.Veri_No_Response,
		&[class*=Veri_Email] {
			@include badge(verification-warning);
		}

		&.ST_Staff {
			@include badge(st-staff);
		}

		&.webCoRE_Minions {
			@include badge(minion);
		}
	}
	/* Pre-verification badge for brand new users who have no group*/
	&:not([class*=group]) .username {
		@include badge(new-user);
	}

	.names span {
		padding-right: 4px;
	}

	/* When a new post is added it is not yet associated with the correct groups*/
	/* so badges should be hidden. The post is "staged" for a brief moment until*/
	/* the server responds.*/
	&.staged .username::after {
		display: none !important;
	}
}
/* Allow elements to be shown or hidden based on whether an*/
/* ancestor element exists*/
@mixin conditional($name, $ancestor: '.' + $name) {
	#{$ancestor} .unless-#{$name} {
		display: none;
	}

	#{$ancestor} {
		.if-#{$name} {
			display: block;
		}

		.if-#{$name}-i {
			display: inline;
		}

		.if-#{$name}-ib {
			display: inline-block;
		}
	}

	.if-#{$name},
	.if-#{$name}-i,
	.if-#{$name}-ib {
		display: none;
	}
}
/* Messages that can be hidden*/
@include conditional(hide-homepage);
@include conditional(hide-donate);
/* Show/hide content based on page navigation*/
@include conditional(homepage, '.wc-homepage');
@include conditional(categories, '.navigation-categories');
@include conditional(topics, '.navigation-topics');
@include conditional(topic, 'body[class*=archetype]');
/* Mobile or desktop*/
@include conditional(desktop, '.desktop-view');
@include conditional(mobile, '.mobile-view');
