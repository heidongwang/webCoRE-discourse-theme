
@import "theme_variables";
/*
 * webCoRE Discourse theme
 *
 * Copyright 2017-2018 authors; see AUTHORS.md or
 * https://webcore-mechanics.github.io/webCoRE-discourse-theme/AUTHORS
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/**/
/* The common stylesheet is loaded on every page for both desktop and mobile*/
/* devices.*/
/**/
/* Discourse color scheme*/
/* Calculate perceived lightness of a color*/
@function luma($color) {
	@return 0.299 * red($color) + 0.587 * green($color) + 0.114 * blue($color);
}
/* Choose between two colors based on the luma of a*/
/* third (usually a background color)*/
@function contrast-switch(
	$color,
	$if-dark: #fff,
	$if-light: #000,
	$threshold: 130
) {
	@return if(luma($color) < $threshold, $if-dark, $if-light);
}
/* Reasonably semantic names for the current Discourse*/
/* color scheme colors*/
$discourse-text-color: $primary;
$discourse-bg-color: $secondary;
$discourse-link-color: $tertiary;
$discourse-navigation-color: $quaternary;
$discourse-highlight-color: $highlight;
$discourse-danger-color: $danger;
$discourse-success-color: $success;
$discourse-love-color: $love;
$discourse-is-dark: luma($discourse-bg-color) < 130;
/* SmartThings brand/site colors*/
$smartthings-primary: #15bfff;
$smartthings-teal: #09a;
$smartthings-violet: #3e0d86;
/* Google webfont with a few weights loaded in <head>*/
$header-font-family: 'Saira Semi Condensed', sans-serif;
/* SMS-style conversation*/
$conversation: (
	them: (
		background-color: mix(#eee, $smartthings-primary, 98%),
		color: #333,
	),
	us: (
		background-color: saturate(darken($smartthings-primary, 8%), 25%),
		color: white,

		link: (
			color: mix(white, $smartthings-primary, 90%),

			hover: (
				color: mix(white, $smartthings-primary, 90%),
			),
		),
	),
);
/* Large square links*/
$color: contrast-switch($discourse-bg-color, $discourse-navigation-color, $smartthings-violet);
$tile: (
	border-color: rgba(white, 0.05),
	border-bottom-color: $color,
	background-color: mix(contrast-switch($discourse-bg-color, lighten($discourse-bg-color, 3%), white), $color, 99%),
	color: $discourse-text-color,

	icon: (
		fill: $color,
	),

	hover: (
		background-color: $smartthings-violet,
		border-color: $smartthings-violet,
		color: white,

		icon: (
			fill: white,
		),
	),
);
/* Full-width bars*/
$ribbon: (
	dark: (
		background-color: mix(#222, $smartthings-primary, 95%),
		color: white,
	),
	tiles: (
		background-color: mix(contrast-switch($discourse-bg-color, $discourse-bg-color, #f5f5f5), map-get($tile, border-color), 97%),
		color: contrast-switch($discourse-bg-color, $discourse-text-color, $smartthings-violet),
	),
	quick-links: (
		background-color: $smartthings-violet,
		color: white,
	),
);
/* Quick navigation buttons*/
$color: $smartthings-primary;
$quick-link: (
	border-color: rgba(white, 0.05),
	border-bottom-color: $color,
	background-color: lighten(map-get(map-get($ribbon, dark), background-color), 15%),
	color: white,

	hover: (
		border-color: $color,
		background-color: $color,
		color: black,
	),
);
/* Forum styling*/
$whisper: (
	background-color: mix($discourse-bg-color, $discourse-highlight-color, 90%),
);
$color: mix($discourse-bg-color, $discourse-highlight-color, 45%);
$whisper-button: (
	background-color: $color,
	color: contrast-switch($color, white, black),
);
$deleted-topic: (
	background-color: rgba($discourse-danger-color, 0.1),
);
/* Autolinked keywords in topics and replies*/
$color: $discourse-text-color;
$keyword-link: (
	border-bottom-style: dotted,
	border-bottom-color: rgba($color, 0.5),
	color: $color,

	hover: (
		border-bottom-color: $color,
		color: $color,
	),
);
$breakpoints: (
	conversations-above-greeting: 960px,
	quick-links-two-lines: 600px,
	badges-below-username: 570px,
);
/* Discourse theme upload variables do not work with child themes*/
$logotype-image: contrast-switch(
	$discourse-bg-color,
	$if-dark: 'https://community.webcore.co/uploads/default/original/2X/2/2382a051335d7fb65d7843e0f8d3edac0d427d96.svg',
	$if-light: 'https://community.webcore.co/uploads/default/original/2X/d/d82aa5d0f719318d1f35bafdec06e2c8cf3c54be.svg'
);
$logomark-image: contrast-switch(
	$discourse-bg-color,
	$if-dark: 'https://community.webcore.co/uploads/default/original/2X/7/7b957d3bc7df5200d1e7a7b1f247155fa3d8fd65.svg',
	$if-light: 'https://community.webcore.co/uploads/default/original/2X/9/9ab0be1e34db8380a430a655173c215d31698caa.svg'
);
@mixin apply($map) {
	@each $key, $value in $map {
		@if $key == link {
			a {
				@include apply($value);
			}
		}
		@else if $key == hover {
			&:hover {
				@include apply($value);
			}
		}
		@else if $key == icon {
			svg {
				@include apply($value);
			}
		}
		@else {
			#{$key}: $value;
		}
	}
}
a.wc-keyword {
	border-bottom-width: 1px;
	@include apply($keyword-link);
}
@mixin badge($group, $badges: $badges) {
	$badge: map-get($badges, $group);
	$content: map-get($badge, content);

	/* .username has a max-width applied that should be removed for long badge text*/
	@if str-length($content) > 20 {
		max-width: none;
	}

	&::after {
		@include apply($badge);

		display: inline-block;

		/* Reduced font size for long badges*/
		@if str-length($content) > 20 {
			font-size: 13px;
		}

		/* Badges on their own line for small screens*/
		@media screen and (max-width: map-get($breakpoints, badges-below-username)) {
			display: table-cell;
			margin-left: 0;
		}
	}
}
/* Username line badge styling; keys do not need to match a user group name and*/
/* must be explicitly mapped to one or more groups below*/
$badges: (
	verification-warning: (
		background-color: #f00,
		content: 'WARNING - No Response to Verification Requests!!!',
	),
	awaiting-verification: (
		background-color: #f90,
		content: 'ST Username Awaiting Verification',
	),
	minion: (
		background-color: rgba(contrast-switch($discourse-bg-color, white, #fed55d), 0.2),
		background-image: url(contrast-switch($discourse-bg-color, 'https://community.webcore.co/uploads/default/original/2X/1/175d366e3b193d3118e6be0d3a6f2f1fa1119486.png', 'https://community.webcore.co/uploads/default/original/2X/a/a421889247679462c500b76a0047bda38866be47.png')),
		background-position: center,
		background-repeat: no-repeat,
		background-size: contain,
		content: ' ',
		width: 104px,
		height: 24px,
		vertical-align: middle,
	),
	new-user: (
		background-color: #f00,
		content: 'User Verification Not Started',
	),
	st-staff: (
		background-color: #00a0dc,
		content: 'SmartThings Staff',
	),
);
.topic-post {
	/* Defaults for post-username badge*/
	.username::after {
		display: none;
		color: white;
		border-radius: 4px;
		margin-left: 5px;
		padding-left: 5px;
		padding-right: 5px;
		font-family: Helvetica, sans-serif;
		font-weight: 100;
		font-size: 14px;
		position: relative;
		top: 4%;
	}

	/* Group badges*/
	.username {
		&.Pending_ST_Confirm,
		&.Verification_PM,
		&.Verification_PM2 {
			@include badge(awaiting-verification);
		}

		&.Veri_No_Response,
		&[class*=Veri_Email] {
			@include badge(verification-warning);
		}

		&.ST_Staff {
			@include badge(st-staff);
		}

		&.webCoRE_Minions {
			@include badge(minion);
		}
	}
	/* Pre-verification badge for brand new users who have no group*/
	&:not([class*=group]) .username {
		@include badge(new-user);
	}

	.names span {
		padding-right: 4px;
	}

	/* When a new post is added it is not yet associated with the correct groups*/
	/* so badges should be hidden. The post is 'staged' for a brief moment until*/
	/* the server responds.*/
	&.staged .username::after {
		display: none !important;
	}
}
/* Allow elements to be shown or hidden based on whether an*/
/* ancestor element exists*/
@mixin conditional($name, $ancestor: '.' + $name) {
	#{$ancestor} .unless-#{$name} {
		display: none;
	}

	#{$ancestor} {
		.if-#{$name} {
			display: block;
		}

		.if-#{$name}-i {
			display: inline;
		}

		.if-#{$name}-ib {
			display: inline-block;
		}
	}

	.if-#{$name},
	.if-#{$name}-i,
	.if-#{$name}-ib {
		display: none;
	}
}
/* Messages that can be hidden*/
@include conditional(hide-homepage);
@include conditional(hide-donate);
.docked-composer {
	left: 5% !important;
	right: 5% !important;
	width: auto;

	.docked-editor {
		width: 100%;

		.d-editor-container {
			width: 100%;
		}
	}

	.d-editor-textarea-wrapper .d-editor-input {
		-moz-box-sizing: border-box;
		     box-sizing: border-box;
	}

	.d-editor-button-bar {
		bottom: 2px !important;
	}
}
/* Show/hide content based on page navigation*/
@include conditional(homepage, '.wc-homepage');
@include conditional(categories, '.navigation-categories');
@include conditional(topics, '.navigation-topics');
@include conditional(topic, 'body[class*=archetype]');
/* Mobile or desktop*/
@include conditional(desktop, '.desktop-view');
@include conditional(mobile, '.mobile-view');
/* Animation keyframes for a message that pops in*/
@-webkit-keyframes message-push {
	0% {
		top: 8px;
		opacity: 0;
		-webkit-transform: scale(0.95);
		        transform: scale(0.95);
	}

	60% {
		opacity: 1;
	}

	80% {
		top: -1px;
		-webkit-transform: scale(1.01);
		        transform: scale(1.01);
	}

	100% {
		top: 0;
		-webkit-transform: scale(1);
		        transform: scale(1);
	}
}
@keyframes message-push {
	0% {
		top: 8px;
		opacity: 0;
		-webkit-transform: scale(0.95);
		        transform: scale(0.95);
	}

	60% {
		opacity: 1;
	}

	80% {
		top: -1px;
		-webkit-transform: scale(1.01);
		        transform: scale(1.01);
	}

	100% {
		top: 0;
		-webkit-transform: scale(1);
		        transform: scale(1);
	}
}
.conversation,
.conversations {
	list-style-type: none;
	margin: 0;
	padding: 0;
}
/* A series of conversations that will be animated one at a time*/
.conversations {
	> li {
		display: none;

		&.active {
			display: block;
		}
	}
}
/* A single conversation with messages between two participants*/
.conversation {
	display: -webkit-box;
	display: -webkit-flex;
	display: flex;
	-webkit-box-align: start;
	-webkit-align-items: flex-start;
	        align-items: flex-start;
	-webkit-justify-content: space-around;
	        justify-content: space-around;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-webkit-flex-direction: column;
	        flex-direction: column;
	font-size: 1.2em;

	/* A message*/
	li {
		-webkit-box-flex: 0;
		-webkit-flex: 0 0 auto;
		        flex: 0 0 auto;
		position: relative;
		border-radius: 8px;
		margin: 8px;
		padding: 8px 16px;
		max-width: 75%;
		background-image: linear-gradient(to bottom, rgba(white, 0.1), rgba(white, 0) 80%);

		/* Pop each message in*/
		-webkit-animation: message-push 200ms ease-out 1s;
		        animation: message-push 200ms ease-out 1s;
		-webkit-animation-fill-mode: backwards;
		        animation-fill-mode: backwards;

		/* Up to 4 messages per conversation, 2 seconds per message.*/
		/* The duration for which the entire conversation remains visible is*/
		/* controlled by the conversations script*/
		&:nth-child(2) {
			-webkit-animation-delay: 4s;
			        animation-delay: 4s;
		}

		&:nth-child(3) {
			-webkit-animation-delay: 6s;
			        animation-delay: 6s;
		}

		&:nth-child(4) {
			-webkit-animation-delay: 9s;
			        animation-delay: 9s;
		}

		/* Dialog bubble triangle*/
		&::after {
			position: absolute;
			bottom: -8px;
			width: 0;
			height: 0;
			border: 0 solid transparent;
			border-width: 4px 6px;
			content: ' ';
		}

		/* Questions on the left side*/
		&.them {
			left: 0;
			@include apply(map-get($conversation, them));

			/* Dialog bubble triangle*/
			&::after {
				$bg-color: map-get(map-get($conversation, them), background-color);

				left: 8px;
				border-left-color: $bg-color;
				border-top-color: $bg-color;
			}
		}

		/* Answers on the right side*/
		&.us {
			-webkit-align-self: flex-end;
			        align-self: flex-end;
			right: 0;
			@include apply(map-get($conversation, us));

			/* Dialog bubble triangle*/
			&::after {
				$bg-color: map-get(map-get($conversation, us), background-color);

				right: 8px;
				border-top-color: $bg-color;
				border-right-color: $bg-color;
			}
		}
	}
}
/* Milder indication of deleted topics*/
.deleted .topic-body {
	background-color: rgba(255, 240, 240, 0.5);
}
/* Interior scrolling in modals is not obvious and can be very confusing;*/
/* instead scroll the entire modal. https://github.com/ady624/webCoRE/issues/28*/
.modal-body {
	max-height: none;
}
@if ($discourse-is-dark) {
	/* Discourse chooses a bad mid-gray that makes buttons look disabled*/
	.btn-primary,
	.nav-pills > li:not(.active) > a {
		color: rgba(white, 0.95);
	}
}
/* Announcement banner*/
#banner {
	margin-top: 10px;
}
li.messages-menu {
	/* Fix a glitch on macOS Safari where the messages menu affects the layout*/
	/* of all other nav icons. This is an invisible container element so does*/
	/* not affect the sizing of the messages dropdown.*/
	width: 0;
}
/* Allow content containers to extend the full width of the viewport*/
#main-outlet {
	/* Align topic navigation directly below the top nav*/
	padding-top: 63px;

	/* Was applied to .wrap*/
	.container,
	.search-container {
		max-width: 1110px;
		margin: 0 auto;
		padding-left: 16px;
		padding-right: 16px;
	}

	&,
	> .container:first-child {
		max-width: none;
		padding-left: 0;
		padding-right: 0;
	}
}
#main .d-header {
	/* Subtle shadow below navbar*/
	box-shadow: 0 1px 1px rgba(black, 0.25) !important;

	/* Consistent nav icon size and alignment*/
	.d-header-icons .d-icon {
		line-height: 32px;

		&.fa {
			font-size: 22px;
		}
	}

	.logo-small {
		width: 33px;
	}

	/* Replace the header search UI with the webCoRE logotype*/
	.title {
		/* Logo icon*/
		a {
			background: url($logomark-image) center no-repeat;
			background-size: contain;

			img {
				opacity: 0;
			}
		}

		/* Logo text*/
		.header-search {
			margin-left: 8px;

			&::before {
				display: block;
				content: ' ';
				background: url($logotype-image) center no-repeat;
				background-size: contain;
				width: 144px;
				height: 26px;
			}

			> * {
				display: none !important;
			}
		}
	}
}
/* Align topic navigation directly below the header*/
#main-outlet {
	padding-top: 63px;
	margin-top: 0;
}
/* Spacing between white background top navigation and the main content*/
%too-close-to-navbar {
	margin-top: 13px;
}
section.user-main,
.top-lists {
	@extend %too-close-to-navbar;
}
.full-width,
.body-page {
	&,
	& > div[itemscope] {
		> .nav-pills {
			@extend %too-close-to-navbar;

			/* Match white page navigation bar indentation to the dark topic bar*/
			padding: 8px;
		}
	}
}
/* Padding around the search*/
.search-container {
	padding-top: 13px;
	padding-bottom: 13px;
}
.welcome-message {
	.greeting {
		line-height: 1.5em;

		.greeting-container {
			display: -webkit-box;
			display: -webkit-flex;
			display: flex;
			-webkit-box-align: center;
			-webkit-align-items: center;
			        align-items: center;
			-webkit-flex-wrap: wrap;
			        flex-wrap: wrap;
			padding-top: 50px;
			padding-bottom: 50px;
		}
		/* On large screens position the conversation beside the greeting text*/
		.conversations,
		.greeting-text {
			-webkit-box-flex: 1;
			-webkit-flex: 1 0 50%;
			        flex: 1 0 50%;
		}
		/* On small screens position the conversation above the greeting text*/
		@media screen and (max-width: map-get($breakpoints, conversations-above-greeting) - 1) {
			.conversations,
			.greeting-text {
				-webkit-box-flex: 1;
				-webkit-flex: 1 1 auto;
				        flex: 1 1 auto;
				-webkit-box-ordinal-group: 2;
				-webkit-order: 1;
				        order: 1;
			}

			.conversations {
				max-width: 600px;
				margin: 0 auto 32px;
				-webkit-box-ordinal-group: 1;
				-webkit-order: 0;
				        order: 0;
			}
		}

		.text {
			font-size: 18px;
			font-weight: 200;
		}

		p:last-child {
			margin-bottom: 0;
		}
	}

	h1 {
		margin-bottom: 32px;
		font-weight: 200;
		font-size: 2.5em;
		line-height: 1.2em;
	}

	h2 {
		text-align: center;
		font-weight: 200;
		font-size: 2em;
		margin: 32px 0 16px;
	}

	.container {
		position: relative;
	}

	.toggle-hide-homepage {
		text-align: center;
		padding-top: 12px;
		padding-bottom: 12px;
	}
}
.ribbon-dark {
	background-image: linear-gradient(to bottom, rgba(white, 0), rgba(white, 0.02));
	@include apply(map-get($ribbon, dark));
}
.ribbon-quick-links {
	@include apply(map-get($ribbon, quick-links));
}
.ribbon-tiles {
	@include apply(map-get($ribbon, tiles));
}
.tiles {
	$padding: 16px;

	display: -webkit-box;

	display: -webkit-flex;

	display: flex;
	-webkit-box-align: stretch;
	-webkit-align-items: stretch;
	        align-items: stretch;
	-webkit-flex-wrap: wrap;
	        flex-wrap: wrap;
	list-style-type: none;
	padding: 0;

	/* Align left and right tiles with surrounding content*/
	margin: ($padding / 2) (-$padding);

	li {
		-webkit-box-flex: 1;
		-webkit-flex: 1 0 0;
		        flex: 1 0 0;
		margin: $padding;

		/* Large icons*/
		svg {
			$size: 96px;

			display: block;
			width: $size;
			height: $size;
			margin: $padding auto (2 * $padding);
		}

		a {
			border: 1px solid transparent;
			border-bottom: 8px solid transparent;
			@include apply($tile);

			display: block;
			height: 100%;
			width: 100%;
			-moz-box-sizing: border-box;
			     box-sizing: border-box;
			padding: $padding;
			box-shadow: 0 1px 3px rgba(black, 0.2);
			transition: background-color 0.15s, border-color 0.15s, color 0.15s;
			font-family: $header-font-family;
			font-size: 22px;
			text-align: center;
			white-space: nowrap;

			&:hover {
				svg {
					-webkit-filter: drop-shadow(0 4px 0 rgba(black, 0.25));
					        filter: drop-shadow(0 4px 0 rgba(black, 0.25));
				}
			}
		}
	}
}
.nav-pills > li {
	&.active > a,
	> a:hover {
		color: white;
	}

	&:not(.active) > a {
		color: $discourse-text-color;
	}
}
.quick-links.nav-pills {
	$bar-padding-v: 2px;
	$link-margin-bottom: 8px;
	$border-width: 1px;
	$border-bottom-width: 3px;
	$button-height: 36px;

	display: -webkit-box;

	display: -webkit-flex;

	display: flex;
	-webkit-box-pack: justify;
	-webkit-justify-content: space-between;
	        justify-content: space-between;
	margin: 0;
	font-size: 0.9em;

	/* Accommodate shadow and border on links*/
	padding-top: $bar-padding-v;
	height: $button-height + 2 * $bar-padding-v + $border-width + $border-bottom-width;
	-webkit-flex-wrap: wrap;
	        flex-wrap: wrap;
	overflow: hidden;

	/* Two rows on small screens, center links for less awkward spacing*/
	@media screen and (max-width: map-get($breakpoints, quick-links-two-lines) - 1) {
		-webkit-box-pack: center;
		-webkit-justify-content: center;
		        justify-content: center;
		height: 2 * $button-height + $link-margin-bottom + 2 * $bar-padding-v + $border-width + $border-bottom-width;
	}

	/* Remove a clearfix that messes up space-between justification*/
	&::after,
	&::before {
		display: none;
	}

	> li {
		-webkit-box-flex: 0;
		-webkit-flex: 0 0 auto;
		        flex: 0 0 auto;
		float: none;
		margin: 0 2px;

		> a {
			$padding-v: 8px;

			border: $border-width solid transparent;
			border-bottom: $border-bottom-width solid transparent;
			box-shadow: 0 1px 2px rgba(black, 0.2);
			transition: background-color 0.15s, border-color 0.15s, color 0.15s;
			padding-top: $padding-v - $border-width;
			padding-bottom: $padding-v - $border-bottom-width;
			margin-bottom: $link-margin-bottom;
		}

		&:not(.active) > a {
			@include apply($quick-link);
		}
	}
}
.nav-pills > li:not(.active) > a:hover {
	/* Discourse uses a lightened color by default*/
	background-color: $discourse-navigation-color;
}
/* Toolbar for category navigation, new topic, latest/new/unread*/
.list-controls {
	@extend .ribbon-dark;

	padding: 0;

	/* Not sure what the intent was for these, left here just in case*/
	position: relative;
	z-index: 2;

	.navigation-container {
		padding: 8px 0;
		/* Clear floats inside the container*/
		&::after {
			display: block;
			clear: both;
			content: '';
		}
		/* Some buttons and links have bottom margins*/
		.btn,
		.nav {
			margin-bottom: 0;
		}
	}
	/* Fix some negative margins*/
	.container {
		margin: 0;
	}

	.desktop-view & {
		.nav-pills > li {
			&.active > a,
			> a:hover {
				color: mix(black, $smartthings-primary, 95%);
			}

			&:not(.active) > a {
				color: mix(white, $smartthings-primary, 95%);

				&:hover {
					/* Discourse uses a lightened color*/
					background-color: $discourse-navigation-color;
				}
			}
		}
	}
}
@media screen and (min-width: 480px) {
	#top-navbar-links a::after {
		content: attr(title);
		padding-left: 4px;
	}
}
h1,
h2 {
	font-family: $header-font-family;
}
/* Better indication of whisper posts and the composer in whisper mode*/
.topic-post.whisper,
#reply-control.composing-whisper {
	@include apply($whisper);

	.submit-panel button.create,
	button.reply {
		@include apply($whisper-button);

		&::after {
			content: ' as Whisper';
		}
	}
}
